#version 150

in vec4 vPosition;
in vec4 vNormal;
 out vec4 color;

uniform mat4 T;
uniform mat4 V;
uniform mat4 P;
uniform vec4 ambientProduct, diffuseProduct, specularProduct;
uniform vec4 lightningPos;
uniform float shininess;

void
main()
{
	vec4 ambient, diffuse, specular;
    gl_Position = P*V*T*(vPosition);


	vec3 n = normalize(vNormal.xyz);
	vec3 l = normalize(lightningPos.xyz - (V*vPosition).xyz);
	vec3 e = -normalize((V*vPosition.xyz).xyz);
	vec3 h = normalize(l+e);
	float kd = max(dot(l,n),0.0);
	float ks = pow(max(dot(n,h), 0.0), shininess);
	ambient = ambientProduct;
	diffuse = kd * diffuseProduct;

	specular = max(ks * specularProduct, 0.0);

	color = vec4((ambient + diffuse + specular).xyz, 1.0);


}

